---
apiVersion: apps/v1  # extensions/v1beta1 is now deprecated, use apps/v1
kind: Deployment
metadata:
  labels: {{ include "app.labels" . | indent 4 }}
  name: {{ template "app.fullname" . }}
spec:
  replicas: {{ .Values.replicas }}
{{- if .Values.strategy }}
  strategy:
{{ toYaml .Values.strategy | indent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ template "app.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
    {{- if or .Values.podAnnotations .Values.podMetrics }}
      annotations:
        {{- if .Values.podMetrics }}
        cgws.com.au/should_be_scraped: 'true'
        cgws.com.au/scrape_port: '{{ .Values.podMetrics.port }}'
        cgws.com.au/metric_path: '{{ .Values.podMetrics.path }}'
        {{- end }}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8}}
    {{- end }}
    {{- end }}
      labels: {{ include "app.labels" . | indent 8 }}
    spec:
      ## We shouldn't need these, but this can stay here in case
      ## {{- if .Values.image.pullSecrets }}
      ## imagePullSecrets:
      ## {{- range $sec := .Values.image.pullSecrets }}
      ##   - name: {{$sec | quote }}
      ## {{- end }}
      ## {{- end }}
      ## Keep this commented until our clusters are ready
      ## {{- if .Values.priorityClassName }}
      ##priorityClassName: "{{ .Values.priorityClassName }}"
      ##{{- end }}
      containers:
        - name: {{ template "app.name" . }}
          image: "{{.Values.image.name}}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          args:
          {{- range $key, $value := .Values.extraArgs }}
            {{- if $value }}
            - --{{ $key }}={{ $value }}
            {{- else }}
            - --{{ $key }}
            {{- end }}
          {{- end }}
          env:
          - name: CONFIG
            value: /etc/sql_exporter/sql_exporter.yml
        {{- if .Values.ssm.awsRegion }}
          - name: AWS_DEFAULT_REGION
            value: {{ .Values.ssm.awsRegion }}
          - name: AWS_REGION
            value: {{ .Values.ssm.awsRegion }}
        {{- end }}
        {{- if .Values.ssm.path }}
          - name: SSM_PATH
            value: {{ .Values.ssm.path }}
        {{- end }}
        {{- if .Values.extraEnv }}
{{ toYaml .Values.extraEnv | indent 10 }}
        {{- end }}
        {{- if .Values.livenessProbe }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
        {{- end }}
        {{- if .Values.readinessProbe }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
        {{- end }}
          ports:
            - name: service-port
              containerPort: {{ .Values.service.servicePort }}
          {{- if .Values.podMetrics }}
            - name: metrics-port
              containerPort: {{ .Values.podMetrics.port }}
          {{- end }}
        {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
        {{- end }}
          volumeMounts:
        {{- if .Values.podVolumes }}
{{ toYaml .Values.podVolumes.volumeMounts | indent 12 }}
        {{- end }}
            - name: config-volume
              mountPath: /etc/sql_exporter/
      volumes:
    {{- if .Values.podVolumes }}
{{ toYaml .Values.podVolumes.volumes | indent 8 }}
    {{- end }}
        - name: config-volume
          configMap:
            name: {{ template "app.fullname" . }}-config
            items:
            - key: sql_exporter.yml
              path: sql_exporter.yml
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
      serviceAccountName: {{ if .Values.rbac.create }}{{ template "app.fullname" . }}{{ else }}"{{ .Values.rbac.serviceAccountName }}"{{ end }}
